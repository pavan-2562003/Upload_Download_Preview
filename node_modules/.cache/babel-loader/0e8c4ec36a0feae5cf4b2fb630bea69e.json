{"ast":null,"code":"import _regeneratorRuntime from\"G:\\\\react-upload-download-files-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"G:\\\\react-upload-download-files-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"G:\\\\react-upload-download-files-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import download from'downloadjs';import axios from'axios';import{API_URL}from'../utils/constants';var FilesList=function FilesList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filesList=_useState2[0],setFilesList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMsg=_useState4[0],setErrorMsg=_useState4[1];useEffect(function(){var getFilesList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"\".concat(API_URL,\"/getAllFiles\"));case 3:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setErrorMsg('');setFilesList(data);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);_context.t0.response&&setErrorMsg(_context.t0.response.data);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getFilesList(){return _ref.apply(this,arguments);};}();getFilesList();},[]);var downloadFile=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,path,mimetype){var result,split,filename;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(API_URL,\"/download/\").concat(id),{responseType:'blob'});case 3:result=_context2.sent;split=path.split('/');filename=split[split.length-1];setErrorMsg('');return _context2.abrupt(\"return\",download(result.data,filename,mimetype));case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);if(_context2.t0.response&&_context2.t0.response.status===400){setErrorMsg('Error while downloading file. Try again later');}case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function downloadFile(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"files-container\"},errorMsg&&/*#__PURE__*/React.createElement(\"p\",{className:\"errorMsg\"},errorMsg),/*#__PURE__*/React.createElement(\"table\",{className:\"files-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Title\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"),/*#__PURE__*/React.createElement(\"th\",null,\"Download File\"))),/*#__PURE__*/React.createElement(\"tbody\",null,filesList.length>0?filesList.map(function(_ref3){var _id=_ref3._id,title=_ref3.title,description=_ref3.description,file_path=_ref3.file_path,file_mimetype=_ref3.file_mimetype;return/*#__PURE__*/React.createElement(\"tr\",{key:_id},/*#__PURE__*/React.createElement(\"td\",{className:\"file-title\"},title),/*#__PURE__*/React.createElement(\"td\",{className:\"file-description\"},description),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"#/\",onClick:function onClick(){return downloadFile(_id,file_path,file_mimetype);}},\"Download\")));}):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{colSpan:3,style:{fontWeight:'300'}},\"No files found. Please add some.\")))));};export default FilesList;","map":{"version":3,"sources":["G:/react-upload-download-files-master/src/components/FilesList.js"],"names":["React","useState","useEffect","download","axios","API_URL","FilesList","filesList","setFilesList","errorMsg","setErrorMsg","getFilesList","get","data","response","downloadFile","id","path","mimetype","responseType","result","split","filename","length","status","map","_id","title","description","file_path","file_mimetype","fontWeight"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACYL,QAAQ,CAAC,EAAD,CADpB,wCACfM,SADe,eACJC,YADI,8BAEUP,QAAQ,CAAC,EAAD,CAFlB,yCAEfQ,QAFe,eAELC,WAFK,eAItBR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,YAAY,0FAAG,mMAEMP,CAAAA,KAAK,CAACQ,GAAN,WAAaP,OAAb,iBAFN,uCAETQ,IAFS,kBAETA,IAFS,CAGjBH,WAAW,CAAC,EAAD,CAAX,CACAF,YAAY,CAACK,IAAD,CAAZ,CAJiB,+EAMjB,YAAMC,QAAN,EAAkBJ,WAAW,CAAC,YAAMI,QAAN,CAAeD,IAAhB,CAA7B,CANiB,oEAAH,kBAAZF,CAAAA,YAAY,0CAAlB,CAUAA,YAAY,GACb,CAZQ,CAYN,EAZM,CAAT,CAcA,GAAMI,CAAAA,YAAY,2FAAG,kBAAOC,EAAP,CAAWC,IAAX,CAAiBC,QAAjB,wLAEId,CAAAA,KAAK,CAACQ,GAAN,WAAaP,OAAb,sBAAiCW,EAAjC,EAAuC,CAC1DG,YAAY,CAAE,MAD4C,CAAvC,CAFJ,QAEXC,MAFW,gBAKXC,KALW,CAKHJ,IAAI,CAACI,KAAL,CAAW,GAAX,CALG,CAMXC,QANW,CAMAD,KAAK,CAACA,KAAK,CAACE,MAAN,CAAe,CAAhB,CANL,CAOjBb,WAAW,CAAC,EAAD,CAAX,CAPiB,iCAQVP,QAAQ,CAACiB,MAAM,CAACP,IAAR,CAAcS,QAAd,CAAwBJ,QAAxB,CARE,+DAUjB,GAAI,aAAMJ,QAAN,EAAkB,aAAMA,QAAN,CAAeU,MAAf,GAA0B,GAAhD,CAAqD,CACnDd,WAAW,CAAC,+CAAD,CAAX,CACD,CAZgB,uEAAH,kBAAZK,CAAAA,YAAY,qDAAlB,CAgBA,mBACE,2BAAK,SAAS,CAAC,iBAAf,EACGN,QAAQ,eAAI,yBAAG,SAAS,CAAC,UAAb,EAAyBA,QAAzB,CADf,cAEE,6BAAO,SAAS,CAAC,aAAjB,eACE,8CACE,2CACE,sCADF,cAEE,4CAFF,cAGE,8CAHF,CADF,CADF,cAQE,iCACGF,SAAS,CAACgB,MAAV,CAAmB,CAAnB,CACChB,SAAS,CAACkB,GAAV,CACE,mBAAGC,CAAAA,GAAH,OAAGA,GAAH,CAAQC,KAAR,OAAQA,KAAR,CAAeC,WAAf,OAAeA,WAAf,CAA4BC,SAA5B,OAA4BA,SAA5B,CAAuCC,aAAvC,OAAuCA,aAAvC,oBACE,0BAAI,GAAG,CAAEJ,GAAT,eACE,0BAAI,SAAS,CAAC,YAAd,EAA4BC,KAA5B,CADF,cAEE,0BAAI,SAAS,CAAC,kBAAd,EAAkCC,WAAlC,CAFF,cAGE,2CACE,yBACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAE,yBACPb,CAAAA,YAAY,CAACW,GAAD,CAAMG,SAAN,CAAiBC,aAAjB,CADL,EAFX,aADF,CAHF,CADF,EADF,CADD,cAoBC,2CACE,0BAAI,OAAO,CAAE,CAAb,CAAgB,KAAK,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAvB,qCADF,CArBJ,CARF,CAFF,CADF,CA0CD,CA5ED,CA8EA,cAAezB,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    const getFilesList = async () => {\n      try {\n        const { data } = await axios.get(`${API_URL}/getAllFiles`);\n        setErrorMsg('');\n        setFilesList(data);\n      } catch (error) {\n        error.response && setErrorMsg(error.response.data);\n      }\n    };\n\n    getFilesList();\n  }, []);\n\n  const downloadFile = async (id, path, mimetype) => {\n    try {\n      const result = await axios.get(`${API_URL}/download/${id}`, {\n        responseType: 'blob'\n      });\n      const split = path.split('/');\n      const filename = split[split.length - 1];\n      setErrorMsg('');\n      return download(result.data, filename, mimetype);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setErrorMsg('Error while downloading file. Try again later');\n      }\n    }\n  };\n\n  return (\n    <div className=\"files-container\">\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n      <table className=\"files-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Download File</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filesList.length > 0 ? (\n            filesList.map(\n              ({ _id, title, description, file_path, file_mimetype }) => (\n                <tr key={_id}>\n                  <td className=\"file-title\">{title}</td>\n                  <td className=\"file-description\">{description}</td>\n                  <td>\n                    <a\n                      href=\"#/\"\n                      onClick={() =>\n                        downloadFile(_id, file_path, file_mimetype)\n                      }\n                    >\n                      Download\n                    </a>\n                  </td>\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td colSpan={3} style={{ fontWeight: '300' }}>\n                No files found. Please add some.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FilesList;\n"]},"metadata":{},"sourceType":"module"}