{"ast":null,"code":"var _jsxFileName = \"G:\\\\react-upload-download-files-master\\\\src\\\\components\\\\FilesList.js\";\nimport React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const getFilesList = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${API_URL}/getAllFiles`);\n        setErrorMsg('');\n        setFilesList(data);\n      } catch (error) {\n        error.response && setErrorMsg(error.response.data);\n      }\n    };\n\n    getFilesList();\n  }, []);\n\n  const downloadFile = async (id, path, mimetype) => {\n    try {\n      const result = await axios.get(`${API_URL}/download/${id}`, {\n        responseType: 'blob'\n      });\n      const split = path.split('/');\n      const filename = split[split.length - 1];\n      setErrorMsg('');\n      return download(result.data, filename, mimetype);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setErrorMsg('Error while downloading file. Try again later');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"files-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, errorMsg && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  }, errorMsg), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"files-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Download File\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, filesList.length > 0 ? filesList.map(({\n    _id,\n    title,\n    description,\n    file_path,\n    file_mimetype\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"file-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, title), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"file-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => downloadFile(_id, file_path, file_mimetype),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Download\")))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    style: {\n      fontWeight: '300'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"No files found. Please add some.\")))));\n};\n\nexport default FilesList;","map":{"version":3,"sources":["G:/react-upload-download-files-master/src/components/FilesList.js"],"names":["React","useState","useEffect","download","axios","API_URL","FilesList","filesList","setFilesList","errorMsg","setErrorMsg","getFilesList","data","get","error","response","downloadFile","id","path","mimetype","result","responseType","split","filename","length","status","map","_id","title","description","file_path","file_mimetype","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport download from 'downloadjs';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\n\nconst FilesList = () => {\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    const getFilesList = async () => {\n      try {\n        const { data } = await axios.get(`${API_URL}/getAllFiles`);\n        setErrorMsg('');\n        setFilesList(data);\n      } catch (error) {\n        error.response && setErrorMsg(error.response.data);\n      }\n    };\n\n    getFilesList();\n  }, []);\n\n  const downloadFile = async (id, path, mimetype) => {\n    try {\n      const result = await axios.get(`${API_URL}/download/${id}`, {\n        responseType: 'blob'\n      });\n      const split = path.split('/');\n      const filename = split[split.length - 1];\n      setErrorMsg('');\n      return download(result.data, filename, mimetype);\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setErrorMsg('Error while downloading file. Try again later');\n      }\n    }\n  };\n\n  return (\n    <div className=\"files-container\">\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n      <table className=\"files-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Download File</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filesList.length > 0 ? (\n            filesList.map(\n              ({ _id, title, description, file_path, file_mimetype }) => (\n                <tr key={_id}>\n                  <td className=\"file-title\">{title}</td>\n                  <td className=\"file-description\">{description}</td>\n                  <td>\n                    <a\n                      href=\"#/\"\n                      onClick={() =>\n                        downloadFile(_id, file_path, file_mimetype)\n                      }\n                    >\n                      Download\n                    </a>\n                  </td>\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td colSpan={3} style={{ fontWeight: '300' }}>\n                No files found. Please add some.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FilesList;\n"]},"metadata":{},"sourceType":"module"}